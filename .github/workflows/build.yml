name: Entur/Docker/Build

on:
  workflow_call:
    inputs:
      context:
        description: "Build context, default root of repository"
        type: string
        default: "."
      git_ref:
        description: "Git reference to check out before deployment, can override default value"
        type: string
        required: false
      dockerfile:
        description: "Dockerfile to use for build"
        type: string
        default: "Dockerfile"
      image_name:
        description: "Image name to use for the build"
        type: string
        default: "repo_name"
      build_artifact_name:
        description: "Name of GitHub artifact to add to build"
        type: string
      build_artifact_path:
        description: "Path to the artifact"
        type: string
        default: "build/libs"
      timeout_minutes:
        description: "Timeout in minutes"
        type: number
        default: 40
    outputs:
      image_artifact:
        value: ${{ jobs.build.outputs.image_artifact }}
      image_tag:
        value: ${{ jobs.build.outputs.image_tag }}

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    permissions:
      contents: read
    outputs:
      image_artifact: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}
      image_tag: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}:latest
    env:
      GHA_DOCKER_BUILD_CONTEXT: ${{ inputs.context }}
      GHA_DOCKER_BUILD_DOCKERFILE: ${{ inputs.dockerfile }}
      GHA_DOCKER_BUILD_ARTIFACT_PATH: ${{ inputs.build_artifact_path }}
      GHA_DOCKER_BUILD_ARTIFACT_NAME: ${{ inputs.build_artifact_name }}
      GHA_DOCKER_BUILD_IMAGE_NAME: ${{ inputs.image_name }}
      GHA_DOCKER_BUILD_GIT_REF: ${{ inputs.git_ref }}
    steps:
      - id: set-image-name
        shell: bash
        run: |
          if [[ "${GHA_DOCKER_BUILD_IMAGE_NAME}" = "repo_name" ]]; then
            echo "GHA_DOCKER_BUILD_IMAGE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          fi
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
             GHA_REF=${GITHUB_HEAD_REF}
          else
             GHA_REF=${GITHUB_REF_NAME}
          fi
          echo "GHA_REF=${GHA_REF}" >> $GITHUB_ENV
      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ env.GHA_REF }}
          fetch-depth: 0
        if: env.GHA_GIT_REF == ''
      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ env.GHA_GIT_REF }}
          fetch-depth: 0
        if: env.GHA_GIT_REF != ''
      - id: download-artifact
        uses: actions/download-artifact@v4
        if: env.GHA_DOCKER_BUILD_ARTIFACT_NAME != ''
        with:
          name: ${{ env.GHA_DOCKER_BUILD_ARTIFACT_NAME }}
          path: ${{ env.GHA_DOCKER_BUILD_ARTIFACT_PATH }}
      - id: setup-buildx
        uses: docker/setup-buildx-action@v3.3.0
      - id: build
        uses: docker/build-push-action@v6.0.1
        with:
          context: ${{ env.GHA_DOCKER_BUILD_CONTEXT }}
          file: ${{ env.GHA_DOCKER_BUILD_DOCKERFILE }}
          push: false
          outputs: "type=docker,dest=/tmp/${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}.tar"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}:${{ github.sha }}
          provenance: false
      # Save the image artifact for scanning and alternative deployment
      - id: save-image
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}
          path: /tmp/${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}.tar
          retention-days: 4 # TODO discuss this or make it a parameter
