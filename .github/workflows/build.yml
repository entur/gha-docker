name: Entur/Docker/Build

on:
  workflow_call:
    inputs:
      context:
        description: "Build context, default root of repository"
        type: string
        default: "."
      dockerfile:
        description: "Dockerfile to use for build"
        type: string
        default: "Dockerfile"
      image_name:
        description: "Image name to use for the build"
        type: string
        default: "repo_name"
      build_artifact_name:
        description: "Name of GitHub artifact to add to build"
        type: string
      build_artifact_path:
        description: "Path to the artifact"
        type: string
        default: "build/libs"
      cloud_provider:
        description: "Which cloud service provider to use - Google Cloud: 'gcp' or Azure: 'az'"
        type: string
        default: "gcp"
      timeout_minutes:
        description: "Timeout in minutes"
        type: number
        default: 40
      runner:
        description: 'Runner to use for the build. To use a runner group, use the format "{''group'': ''group_name''}". See https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on for more information.'
        type: string
        default: "['ubuntu-24.04']"
      build_args:
        description: 'List of build args to pass to docker build. Warning! Do not pass secrets into docker args.'
        type: string
        required: false
      git_ref:
        description: 'Option to override git reference to checkout before build'
        type: string
        required: false
      additional_artifacts_name:
        description: 'Name of GitHub artifact to contain additional artifacts.'
        type: string
        required: false
        default: "additional_artifacts"
      additional_artifacts_paths:
        description: 'List of paths to additional artifacts to be saved to Github artifact storage.'
        type: string
        required: false
              
    secrets:
      BUILD_SECRETS:
        required: false
    outputs:
      image_artifact:
        value: ${{ jobs.build.outputs.image_artifact }}
      additional_artifacts:
        value: ${{ jobs.build.outputs.additional_artifacts }}

jobs:
  build:
    name: Docker Build
    runs-on: ${{ fromJSON(inputs.runner) }}
    timeout-minutes: ${{ inputs.timeout_minutes }}
    permissions:
      contents: read
      id-token: write
    outputs:
      image_artifact: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}
      additional_artifacts: ${{ env.GHA_ADDITIONAL_ARTIFACTS_NAME }}
    env:
      GHA_DOCKER_BUILD_CONTEXT: ${{ inputs.context }}
      GHA_DOCKER_BUILD_DOCKERFILE: ${{ inputs.dockerfile }}
      GHA_DOCKER_BUILD_ARTIFACT_PATH: ${{ inputs.build_artifact_path }}
      GHA_DOCKER_BUILD_ARTIFACT_NAME: ${{ inputs.build_artifact_name }}
      GHA_DOCKER_BUILD_IMAGE_NAME: ${{ inputs.image_name }}
      GHA_DOCKER_PUSH_CLOUD_PROVIDER: ${{ inputs.cloud_provider }}
      GHA_DOCKER_BUILD_ARGS: ${{ inputs.build_args }}
      GHA_GIT_REF: ${{inputs.git_ref}}
      GHA_ADDITIONAL_ARTIFACTS_NAME: ${{inputs.additional_artifacts_name}}
      GHA_ADDITIONAL_ARTIFACTS_PATHS: ${{inputs.additional_artifacts_paths}}
      
    steps:
      - name: Set variables
        id: set-vars
        shell: bash
        run: |
          if [[ "${GHA_DOCKER_BUILD_IMAGE_NAME}" = "repo_name" ]]; then
            echo "GHA_DOCKER_BUILD_IMAGE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          fi

      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v5
        if: env.GHA_GIT_REF == ''
        with:
          submodules: recursive
          
      - name: Checkout code with reference
        id: checkout-code-ref
        uses: actions/checkout@v5
        if: env.GHA_GIT_REF != ''
        with:
          submodules: recursive
          ref: ${{ env.GHA_GIT_REF }}

      - if: env.GHA_DOCKER_BUILD_ARTIFACT_NAME != ''
        name: Download artifact ${{ env.GHA_DOCKER_BUILD_ARTIFACT_NAME }}
        id: download-artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.GHA_DOCKER_BUILD_ARTIFACT_NAME }}
          path: ${{ env.GHA_DOCKER_BUILD_ARTIFACT_PATH }}

      - if: env.GHA_DOCKER_BUILD_ARTIFACT_NAME != ''
        name: List artifacts in ${{ env.GHA_DOCKER_BUILD_ARTIFACT_PATH }}
        id: list-artifacts
        shell: bash
        run: ls -l ${{ env.GHA_DOCKER_BUILD_ARTIFACT_PATH }}

      - name: Setup buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Authenticate with the cloud provider
        id: auth
        uses: entur/gha-meta/.github/actions/docker-auth@v1
        with:
          cloud_provider: ${{ env.GHA_DOCKER_PUSH_CLOUD_PROVIDER }}
          gcp_workload_identity_provider: ${{ vars.CI_WORKLOAD_IDENTITY_PROVIDER }}
          gcp_service_account: ${{ vars.CI_SERVICE_ACCOUNT }}
          azure_client_id: ${{ vars.CI_AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ vars.CI_AZURE_TENANT_ID }}
          azure_subscription_id: ${{ vars.CI_AZURE_SUBSCRIPTION_ID }}

      - name: Build image
        id: build
        uses: docker/build-push-action@v6.18.0
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ env.GHA_DOCKER_BUILD_CONTEXT }}
          build-args: ${{ env.GHA_DOCKER_BUILD_ARGS }}
          file: ${{ env.GHA_DOCKER_BUILD_DOCKERFILE }}
          outputs: "type=docker,dest=/tmp/${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}.tar" 
          tags: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }} # Need tag to find artifact in push job
          push: false
          provenance: false 
          secrets: |
            ${{ secrets.BUILD_SECRETS }}

      - name: Save docker image to the artifact storage
        id: save-image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}
          path: /tmp/${{ env.GHA_DOCKER_BUILD_IMAGE_NAME }}.tar
          retention-days: 4 # TODO discuss this or make it a parameter

      - name: Save additional artifacts to the artifact storage
        if: inputs.additional_artifacts_paths != ''
        id: save-additional-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: additional-artifacts
          path: ${{ env.GHA_ADDITIONAL_ARTIFACTS_PATHS }}
          retention-days: 4 # TODO discuss this or make it a parameter
