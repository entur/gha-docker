name: Entur/Docker/Push

on:
  workflow_call:
    inputs:
      image_name:
        description: "GitHub artifact with Docker image"
        type: string
        default: "repo_name"
      context:
        description: "Build context, default root of repository"
        type: string
        default: "."
      dockerfile:
        description: "Dockerfile name to use for build"
        type: string
        default: "Dockerfile"
      image_tag:
        description: "Docker tag. If not set, it will be set to 'branch_name.date-SHA'"
        type: string
        default: "image_tag"
      extra_image_tags:
        description: "Extra Docker tags (comma separated) to apply and push - Requires Harness project-level setting 'Execute Triggers With All Collected Artifacts or Manifests'"
        type: string
      cloud_provider:
        description: "Which cloud service provider to use - Google Cloud: 'gcp' or Azure: 'az'"
        type: string
        default: "gcp"
      timeout_minutes:
        description: "Timeout in minutes"
        type: number
        default: 10
      git_tag:
        description: "Tag the repository default branch with the image_tag? Used by Harness CD to deploy the exact same helm/terraform code"
        type: boolean
        default: true
      git_ref:
        description: 'Option to override git reference to checkout before push, will replace the SHA in default image_tag'
        type: string
        required: false
        
    outputs:
      image_name:
        value: ${{ jobs.push.outputs.image_name }}
      image_tag:
        value: ${{ jobs.push.outputs.image_tag }}
      image_and_tag:
        value: "${{ jobs.push.outputs.image_name }}:${{ jobs.push.outputs.image_tag }}"
      all_image_tags:
        value: ${{ jobs.push.outputs.all_image_tags }}
env:
  GHA_DOCKER_PUSH_IMAGE_NAME: ${{ inputs.image_name }}
  GHA_DOCKER_PUSH_CONTEXT: ${{ inputs.context }}
  GHA_DOCKER_PUSH_DOCKERFILE: ${{ inputs.dockerfile }}
  GHA_DOCKER_PUSH_IMAGE_TAG: ${{ inputs.image_tag }}
  GHA_DOCKER_PUSH_EXTRA_IMAGE_TAGS: ${{ inputs.extra_image_tags }}
  GHA_DOCKER_PUSH_CLOUD_PROVIDER: ${{ inputs.cloud_provider }}
  GHA_DOCKER_PUSH_DATE: ""
  GHA_DOCKER_PUSH_BRANCH_NAME: ""
  GHA_DOCKER_PUSH_DOCKER_REGISTRY: ""
  GHA_DOCKER_PUSH_IMAGE: ""
  GHA_DOCKER_PUSH_GIT_REF: ${{ inputs.git_ref }}
  
jobs:
  push:
    name: Docker Push
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    outputs:
      image_name: ${{ env.GHA_DOCKER_PUSH_IMAGE_NAME }}
      image_tag: ${{ env.GHA_DOCKER_PUSH_IMAGE_TAG }}
      all_image_tags: ${{ env.GHA_ALL_IMAGE_TAGS }}
    steps:
      - name: Set variables
        id: set-env
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          # Convert ref name to a valid git & docker tag name
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
            BRANCH_NAME=${GITHUB_HEAD_REF}
          else
            BRANCH_NAME=${GITHUB_REF_NAME}
          fi
          BRANCH_NAME=${BRANCH_NAME:0:43} # truncate to max_len - len(.YYYYMMDD-SHA1234567)
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed s'/[-]$//') # remove trailing -
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | tr -d '[ÆØÅæøå]') # to ASCII lower case
          BRANCH_NAME=${BRANCH_NAME//\//-} # replace / with -
          BRANCH_NAME=${BRANCH_NAME//./-}  # replace . with -
          BRANCH_NAME=${BRANCH_NAME//!/-}  # replace ! with -
          echo "GHA_DOCKER_PUSH_BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - if: env.GHA_DOCKER_PUSH_IMAGE_NAME == 'repo_name'
        name: Set image artifact name
        id: set-image-artifact-name
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - if: env.GHA_DOCKER_PUSH_IMAGE_TAG  == 'image_tag'
        name: Set image tag variable
        id: set-image-tag
        shell: bash
        run: |
          SHA_SHORT="${GITHUB_SHA:0:7}"
          if [ -n "${GHA_GIT_REF}" ]; then 
            TAG="${GHA_DOCKER_PUSH_BRANCH_NAME}.${GHA_DOCKER_PUSH_DATE}-${GHA_GIT_REF}"
          else
            TAG="${GHA_DOCKER_PUSH_BRANCH_NAME}.${GHA_DOCKER_PUSH_DATE}-SHA${SHA_SHORT}"
          fi
          echo "GHA_DOCKER_PUSH_IMAGE_TAG=$TAG" >> "$GITHUB_ENV"

      - if: env.GHA_DOCKER_PUSH_CLOUD_PROVIDER  == 'az'
        name: Set Azure registry
        id: set-registry-azure
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DOCKER_REGISTRY=acrentur001.azurecr.io" >> $GITHUB_ENV

      - if: env.GHA_DOCKER_PUSH_CLOUD_PROVIDER  == 'gcp'
        name: Set GCP registry
        id: set-registry-gcp
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DOCKER_REGISTRY=eu.gcr.io/entur-system-1287" >> $GITHUB_ENV

      - name: Set full registry url and image name
        id: set-image
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE=${GHA_DOCKER_PUSH_DOCKER_REGISTRY}/${GHA_DOCKER_PUSH_IMAGE_NAME}" >> $GITHUB_ENV

      - name: Checkout code
        id: checkout-code
        uses: actions/checkout@v4
        if: env.GHA_GIT_REF == ''
        with:
          submodules: recursive

      - name: Checkout code with reference
        id: checkout-code-ref
        uses: actions/checkout@v4
        if: env.GHA_GIT_REF != ''
        with:
          submodules: recursive
          ref: ${{ env.GHA_GIT_REF }}

      - name: Download docker image from the artifact storage
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GHA_DOCKER_PUSH_IMAGE_NAME }}
          path: /tmp

      - name: Load docker image
        run: |
          docker load --input /tmp/${GHA_DOCKER_PUSH_IMAGE_NAME}.tar
          docker image ls -a

      - name: Authenticate with the cloud provider
        id: auth
        uses: entur/gha-meta/.github/actions/docker-auth@v1
        with:
          cloud_provider: ${{ env.GHA_DOCKER_PUSH_CLOUD_PROVIDER }}
          gcp_workload_identity_provider: ${{ vars.CI_WORKLOAD_IDENTITY_PROVIDER }}
          gcp_service_account: ${{ vars.CI_SERVICE_ACCOUNT }}
          azure_client_id: ${{ vars.CI_AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ vars.CI_AZURE_TENANT_ID }}
          azure_subscription_id: ${{ vars.CI_AZURE_SUBSCRIPTION_ID }}

      - name: Docker tag and push to registry
        id: docker-push-tags
        shell: bash
        run: |
          local_tag="${GHA_DOCKER_PUSH_IMAGE_NAME}"
          tags="${GHA_DOCKER_PUSH_IMAGE_TAG},${GHA_DOCKER_PUSH_EXTRA_IMAGE_TAGS}"
          echo "GHA_ALL_IMAGE_TAGS=${tags}" >> $GITHUB_ENV

          echo "$tags" | while read -d ',' -r tag || [[ -n $tag ]]; do
            remote_tag="${GHA_DOCKER_PUSH_IMAGE}:${tag}"

            echo "Tagging and pushing '$local_tag' as '$remote_tag'"

            docker tag "$local_tag" "$remote_tag"
            docker push "$remote_tag"
          done

      # Tag the git commit with the image tag (used by Harness CD to deploy)
      - if: inputs.git_tag && github.event_name == 'pull_request'
        name: Tag default branch with the container image tag ${{ env.GHA_DOCKER_PUSH_IMAGE_TAG }}
        id: tag-version
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git tag --annotate "$GHA_DOCKER_PUSH_IMAGE_TAG" -m "chore(tag): $GHA_DOCKER_PUSH_IMAGE_TAG [skip ci]" --force
          git push origin "$GHA_DOCKER_PUSH_IMAGE_TAG" --force
