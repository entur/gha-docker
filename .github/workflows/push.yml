name: Entur/Docker/Push

on:
  workflow_call:
    inputs:
      image_artifact:
        description: "GitHub artifact with Docker image"
        type: string
        default: "repo_name"
      artifact_registry_project_id:
        type: string
        description: "Project id for artifact registry"
        default: "entur-system-1287"
      environment:
        type: string
        description: "GitHub environment to use"
        default: "prd"
      dockerfile:
        description: "Dockerfile to use for build"
        type: string
        default: "Dockerfile"
    outputs:
      imageid:
        value: ${{ jobs.push.outputs.imageid }}
      metadata:
        value: ${{ jobs.push.outputs.metadata }}
      imagename:
        value: ${{ jobs.push.outputs.imageName }}

jobs:
  push:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write
    outputs:
      imageid: ${{ steps.meta.outputs.imageid }}
      metadata: ${{ steps.meta.outputs.metdata }}
      imageName: ${{ steps.push.outputs.imageName }}
    timeout-minutes: 10
    steps:
      - id: set-env
        shell: bash
        run: |
          echo "GHA_DOCKER_BUILD_IMAGE_ARTIFACT_NAME=${{ inputs.image_artifact }}" >> $GITHUB_ENV
          echo "GHA_GCR_PROJECT_ID=${{ inputs.artifact_registry_project_id }}" >> $GITHUB_ENV
          echo "WORKLOAD_IDENTITY_PROVIDER=${{ vars.WORKLOAD_IDENTITY_PROVIDER }}" >> $GITHUB_ENV
          echo "SERVICE_ACCOUNT=${{ vars.SERVICE_ACCOUNT }}" >> $GITHUB_ENV
          echo "GHA_DOCKER_BUILD_DOCKERFILE=${{ inputs.dockerfile }}" >> $GITHUB_ENV
      - id: set-image-name
        shell: bash
        run: |
          if [[ "${{ env.GHA_DOCKER_BUILD_IMAGE_ARTIFACT_NAME }}" = "repo_name" ]]; then
            echo "GHA_DOCKER_BUILD_IMAGE_ARTIFACT_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          fi
      - uses: actions/checkout@v4.1.1
      - uses: docker/setup-buildx-action@v3.1.0
      - id: auth
        uses: google-github-actions/auth@v2.1.2
        with:
          project_id: ${{ env.GHA_GCR_PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: 'access_token'
      - id: login-gcr
        uses: docker/login-action@v3.1.0
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - id: download-image-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GHA_DOCKER_BUILD_IMAGE_ARTIFACT_NAME }}
          path: /tmp
      - id: load-image
        run: |
          docker load --input /tmp/${{ env.GHA_DOCKER_BUILD_IMAGE_ARTIFACT_NAME }}.tar
      - id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            eu.gcr.io/${{ env.GHA_GCR_PROJECT_ID }}/${{ env.GHA_DOCKER_BUILD_IMAGE_ARTIFACT_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - id: push
        uses: docker/build-push-action@v5.2.0
        with:
          file: ${{ env.GHA_DOCKER_BUILD_DOCKERFILE }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
