name: Entur/Docker/Push

on:
  workflow_call:
    inputs:
      image_name:
        description: "GitHub artifact with Docker image"
        type: string
        default: "repo_name"
      environment:
        type: string
        description: "GitHub environment to use Google Cloud: (dev, tst, prd) or Azure: (az-dev, az-test, az-prod)"
        default: "prd"
      context:
        description: "Build context, default root of repository"
        type: string
        default: "."
      dockerfile:
        description: "Dockerfile name to use for build"
        type: string
        default: "Dockerfile"
      image_tag:
        description: "Docker tag"
        type: string
        default: "image_tag"
      cloud_provider:
        description: "Which cloud service provider to use - Google Cloud: 'gcp' or Azure: 'az'"
        type: string
        default: "gcp"
      timeout_minutes:
        description: "Timeout in minutes"
        type: number
        default: 10
      git_tag:
        description: "Tag git with image_tag?"
        type: boolean
        default: true
    outputs:
      meta:
        value: ${{ jobs.push.outputs.meta }}
      image_name:
        value: ${{ jobs.push.outputs.image_name }}
      image_tag:
        value: ${{ jobs.push.outputs.image_tag }}
      image_and_tag:
        value: "${{ jobs.push.outputs.image_name }}:${{ jobs.push.outputs.image_tag }}"
env:
  GHA_DOCKER_PUSH_IMAGE_NAME: ${{ inputs.image_name }}
  GHA_DOCKER_PUSH_CONTEXT: ${{ inputs.context }}
  GHA_DOCKER_PUSH_DOCKERFILE: ${{ inputs.dockerfile }}
  GHA_DOCKER_PUSH_IMAGE_TAG: ${{ inputs.image_tag }}
  GHA_DOCKER_PUSH_CLOUD_PROVIDER: ${{ inputs.cloud_provider }}
  GHA_DOCKER_PUSH_ENVIRONMENT: ${{ inputs.environment }}
  GHA_DOCKER_PUSH_DATE: ""
  GHA_DOCKER_PUSH_BRANCH_NAME: ""
  GHA_DOCKER_PUSH_DOCKER_REGISTRY: ""
  GHA_DOCKER_PUSH_IMAGE: ""
jobs:
  push:
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    environment: ${{ inputs.environment }}
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    outputs:
      meta: ${{ steps.push.outputs.metadata }}
      image_name: ${{ env.GHA_DOCKER_PUSH_IMAGE_NAME }}
      image_tag: ${{ env.GHA_DOCKER_PUSH_IMAGE_TAG }}
    steps:
      - id: set-env
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          # Convert ref name to a valid git & docker tag name
          if [[ "${GITHUB_EVENT_NAME}" == pull_request* ]]; then
            BRANCH_NAME=${GITHUB_HEAD_REF}
          else
            BRANCH_NAME=${GITHUB_REF_NAME}
          fi
          BRANCH_NAME=${BRANCH_NAME:0:43} # truncate to max_len - len(.YYYYMMDD-SHA1234567)
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed s'/[-]$//') # remove trailing -
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | tr -d '[ÆØÅæøå]') # to ASCII lower case
          BRANCH_NAME=${BRANCH_NAME//\//-} # replace / with -
          BRANCH_NAME=${BRANCH_NAME//./-}  # replace . with -
          BRANCH_NAME=${BRANCH_NAME//!/-}  # replace ! with -
          echo "GHA_DOCKER_PUSH_BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      - id: set-image-artifact-name
        if: env.GHA_DOCKER_PUSH_IMAGE_NAME == 'repo_name'
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - id: set-image-tag
        if: env.GHA_DOCKER_PUSH_IMAGE_TAG  == 'image_tag'
        shell: bash
        run: |
          SHA=${GITHUB_SHA}
          SHORT_SHA=${SHA:0:7}
          echo "GHA_DOCKER_PUSH_IMAGE_TAG=${GHA_DOCKER_PUSH_BRANCH_NAME}.${GHA_DOCKER_PUSH_DATE}-SHA${SHORT_SHA}" >> $GITHUB_ENV
      - id: set-registry-azure
        if: env.GHA_DOCKER_PUSH_CLOUD_PROVIDER  == 'az'
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DOCKER_REGISTRY=acrentur001.azurecr.io" >> $GITHUB_ENV
      - id: set-registry-gcp
        if: env.GHA_DOCKER_PUSH_CLOUD_PROVIDER  == 'gcp'
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DOCKER_REGISTRY=eu.gcr.io/entur-system-1287" >> $GITHUB_ENV
      - id: set-image
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE=${GHA_DOCKER_PUSH_DOCKER_REGISTRY}/${GHA_DOCKER_PUSH_IMAGE_NAME}" >> $GITHUB_ENV
          if [[ "${GITHUB_EVENT_NAME}" == pull_request* ]]; then
             GHA_REF=${GITHUB_HEAD_REF}
          else
             GHA_REF=${GITHUB_REF_NAME}
          fi
          echo "GHA_REF=${GHA_REF}" >> $GITHUB_ENV
      - uses: actions/checkout@v4.1.7
        with:
          ref: ${{ env.GHA_REF }}
          fetch-depth: 0
      # Artifact cache
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.GHA_DOCKER_PUSH_IMAGE_NAME }}
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/${GHA_DOCKER_PUSH_IMAGE_NAME}.tar
          docker image ls -a
      # Generate metadata for push (ps: does not do anything with the image, just generates output for later steps)
      - id: meta
        name: Generate Metadata for push
        uses: docker/metadata-action@v5.5.1
        with:
          context: workflow
          images: ${{ env.GHA_DOCKER_PUSH_IMAGE }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=${{ env.GHA_DOCKER_PUSH_BRANCH_NAME }}
            type=raw,value=${{ env.GHA_DOCKER_PUSH_IMAGE_TAG }}
            type=raw,value=latest
      # Authenticate with cloud provider
      - uses: entur/gha-meta/.github/actions/docker-auth@v1.1.7
        with:
          environment: ${{ env.GHA_DOCKER_PUSH_ENVIRONMENT }}
          cloud_provider: ${{ env.GHA_DOCKER_PUSH_CLOUD_PROVIDER }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
          azure_client_id: ${{ vars.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ vars.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      # Push image with single tag with ´docker push´
      - id: docker-push-single-tag
        name: docker push
        shell: bash
        run: |
          docker tag ${GHA_DOCKER_PUSH_IMAGE_NAME}:${GITHUB_SHA} ${GHA_DOCKER_PUSH_IMAGE}:${GHA_DOCKER_PUSH_IMAGE_TAG}
          docker push ${GHA_DOCKER_PUSH_IMAGE}:${GHA_DOCKER_PUSH_IMAGE_TAG}
      # Tag the git commit with the image tag (used by Harness CD to deploy)
      - id: tag-version
        if: inputs.git_tag
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git tag -d "$GHA_DOCKER_PUSH_IMAGE_TAG" || true
          git push origin :"$GHA_DOCKER_PUSH_IMAGE_TAG" || true
          git tag -a "$GHA_DOCKER_PUSH_IMAGE_TAG" -m "chore(tag): $GHA_DOCKER_PUSH_IMAGE_TAG [skip ci]"
          git push origin "$GHA_DOCKER_PUSH_IMAGE_TAG" --force
