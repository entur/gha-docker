name: Entur/Docker/Push

on:
  workflow_call:
    inputs:
      image_name:
        description: "GitHub artifact with Docker image"
        type: string
        default: "repo_name"
      environment:
        type: string
        description: "GitHub environment to use"
        default: "prd"
      context:
        description: "Build context, default root of repository"
        type: string
        default: "."
      dockerfile:
        description: "Dockerfile to use for build"
        type: string
        default: "Dockerfile"
      image_tag:
        description: "Docker tag"
        type: string
        default: "image_tag"
      cloud_provider:
        description: "Which repository to use. GCP/Azure"
        type: string
        default: "GCP"
    outputs:
      meta:
        value: ${{ jobs.push.outputs.meta }}
      image_name:
        value: ${{ jobs.push.outputs.image_name }}
      image_tag:
        value: ${{ jobs.push.outputs.image_tag }}

jobs:
  push:
    runs-on: ubuntu-24.04
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      id-token: write
    outputs:
      meta: ${{ steps.push.outputs.metadata }}
      image_name: ${{ env.GHA_DOCKER_PUSH_IMAGE_NAME }}
      image_tag: ${{ env.GHA_DOCKER_PUSH_IMAGE_TAG }}

    timeout-minutes: 10
    steps:
      - id: set-env
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE_NAME=${{ inputs.image_name }}" >> $GITHUB_ENV
          echo "GHA_DOCKER_PUSH_CONTEXT=${{ inputs.context }}" >> $GITHUB_ENV
          echo "GHA_DOCKER_PUSH_DOCKERFILE=${{ inputs.dockerfile }}" >> $GITHUB_ENV
          echo "GHA_DOCKER_PUSH_IMAGE_TAG=${{ inputs.image_tag }}" >> $GITHUB_ENV
          echo "GHA_DOCKER_PUSH_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "GHA_DOCKER_PUSH_CLOUD_PROVIDER=${{ inputs.cloud_provider }}" >> $GITHUB_ENV
          # Convert ref name to a valid git & docker tag name
          if [[ "${{ github.event_name }}" = "pull_request" ]]; then
            BRANCH_NAME=${{ github.head_ref }}
          else
            BRANCH_NAME=${{ github.ref_name }}
          fi
          BRANCH_NAME=${BRANCH_NAME:0:43} # truncate to max_len - len(.YYYYMMDD-SHA1234567)
          BRANCH_NAME=$(echo "$BRANCH_NAME" | sed s'/[-]$//') # remove trailing -
          BRANCH_NAME=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | tr -d '[ÆØÅæøå]') # to ASCII lower case
          BRANCH_NAME=${BRANCH_NAME//\//-} # replace / with -
          BRANCH_NAME=${BRANCH_NAME//./-}  # replace . with -
          BRANCH_NAME=${BRANCH_NAME//!/-}  # replace ! with -
          echo "GHA_DOCKER_PUSH_BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      - id: set-image-artifact-name
        if: env.GHA_DOCKER_PUSH_IMAGE_NAME == 'repo_name'
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
      - id: set-image-tag
        if: env.GHA_DOCKER_PUSH_IMAGE_TAG  == 'image_tag'
        shell: bash
        run: |
          SHA=${{ github.sha }}
          SHORT_SHA=${SHA:0:7}
          echo "GHA_DOCKER_PUSH_IMAGE_TAG=${{ env.GHA_DOCKER_PUSH_BRANCH_NAME }}.${{ env.GHA_DOCKER_PUSH_DATE }}-SHA${SHORT_SHA}" >> $GITHUB_ENV
      - id: set-registry-azure
        if: env.GHA_DOCKER_PUSH_CLOUD_PROVIDER  == 'Azure'
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DOCKER_REGISTRY=acrentur001.azurecr.io" >> $GITHUB_ENV
      - id: set-registry-gcp
        if: env.GHA_DOCKER_PUSH_CLOUD_PROVIDER  == 'GCP'
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_DOCKER_REGISTRY=eu.gcr.io/entur-system-1287" >> $GITHUB_ENV
      - id: set-image
        shell: bash
        run: |
          echo "GHA_DOCKER_PUSH_IMAGE=${{ env.GHA_DOCKER_PUSH_DOCKER_REGISTRY}}/${{ env.GHA_DOCKER_PUSH_IMAGE_NAME }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4.1.6
      - uses: docker/setup-buildx-action@v3.3.0
      - uses: entur/gha-meta/.github/actions/docker-auth@v1.1.1
        with:
          environment: ${{ inputs.environment }}
          cloud_provider: ${{ env.GHA_DOCKER_PUSH_CLOUD_PROVIDER }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}
          azure_client_id: ${{ vars.AZURE_CLIENT_ID }}
          azure_tenant_id: ${{ vars.AZURE_TENANT_ID }}
          azure_subscription_id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.GHA_DOCKER_PUSH_IMAGE }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=${{ env.GHA_DOCKER_PUSH_BRANCH_NAME }}
            type=raw,value=${{ env.GHA_DOCKER_PUSH_IMAGE_TAG }}
            type=raw,value=latest
      - id: push
        uses: docker/build-push-action@v5.3.0
        with:
          context: "{{defaultContext}}:${{ env.GHA_DOCKER_BUILD_CONTEXT }}"
          push: true
          cache-from: type=gha
          file: ${{ env.GHA_DOCKER_PUSH_DOCKERFILE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
